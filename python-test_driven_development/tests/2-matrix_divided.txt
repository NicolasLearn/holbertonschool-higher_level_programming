This modul is a doctest for the modul '2-matrix_divided.py'

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# matrix test cases
>>> m1 = [[1, 2], [3, 4]]
>>> m2 = [[1.2, 2.3], [3.4, 4.5]]
>>> m3 = [[1, float('2')], [3, int("55")]]
>>> m4 = [['1', 2], [3, 4]]
>>> m5 = [[1, 2], [3, 4, 5]]
>>> m6 = [[1, 2, True], [3, 4, 5]]
>>> m7 = [[1, 2, "string"], [3, 4, 5]]
>>> t1 = (1, 2, 3, 4)
>>> t2 = ((1, 2), (3, 4))
>>> d1 = {'1': 2, '3': 4}

# VALID TEST

>>> matrix_divided(m1, 2)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided(m2, 2)
[[0.6, 1.15], [1.7, 2.25]]

>>> matrix_divided(m3, 2)
[[0.5, 1.0], [1.5, 27.5]]

>>> matrix_divided(m1, 5000)
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided(list(t2), 2)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided(m1, int("2"))
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided(m1, float('NaN'))
[[nan, nan], [nan, nan]]


# TYPE ERROR

>>> matrix_divided(m4, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(m5, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(m6, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(m7, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(list(t1), 2)
Traceback (most recent call last):
...
TypeError: 'int' object is not iterable

>>> matrix_divided(d1, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(list(d1), 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(m1, "2")
Traceback (most recent call last):
...
TypeError: div must be a number


# NAME ERROR

>>> matrix_divided(m1, NaN)
Traceback (most recent call last):
...
NameError: name 'NaN' is not defined


# ZERO DIVISION ERROR

>>> matrix_divided(m1, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
